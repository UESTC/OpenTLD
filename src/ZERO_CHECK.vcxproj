<?xml version="1.0" encoding="Windows-1252"?>
<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|Win32">
      <Configuration>MinSizeRel</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|Win32">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGUID>{E8AC5C1A-DF9B-42CE-9F41-AFD076F97180}</ProjectGUID>
    <Keyword>Win32Proj</Keyword>
    <Platform>Win32</Platform>
    <ProjectName>ZERO_CHECK</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
    <PropertyGroup>
      <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>D:\wangzi6147\Soft\opencv2.4.9\build_CUDA_VS2013;D:\wangzi6147\Soft\opencv2.4.9\sources\include;D:\wangzi6147\Soft\opencv2.4.9\sources\include\opencv;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\core\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\flann\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\imgproc\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\highgui\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\features2d\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\calib3d\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\ml\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\video\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\legacy\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\objdetect\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\photo\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\gpu\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\ocl\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\nonfree\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\contrib\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\stitching\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\superres\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\ts\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\videostab\include;D:\wangzi6147\Doc\git\OpenTLD\src\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>D:\wangzi6147\Soft\opencv2.4.9\build_CUDA_VS2013;D:\wangzi6147\Soft\opencv2.4.9\sources\include;D:\wangzi6147\Soft\opencv2.4.9\sources\include\opencv;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\core\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\flann\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\imgproc\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\highgui\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\features2d\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\calib3d\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\ml\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\video\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\legacy\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\objdetect\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\photo\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\gpu\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\ocl\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\nonfree\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\contrib\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\stitching\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\superres\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\ts\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\videostab\include;D:\wangzi6147\Doc\git\OpenTLD\src\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>D:\wangzi6147\Soft\opencv2.4.9\build_CUDA_VS2013;D:\wangzi6147\Soft\opencv2.4.9\sources\include;D:\wangzi6147\Soft\opencv2.4.9\sources\include\opencv;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\core\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\flann\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\imgproc\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\highgui\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\features2d\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\calib3d\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\ml\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\video\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\legacy\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\objdetect\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\photo\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\gpu\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\ocl\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\nonfree\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\contrib\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\stitching\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\superres\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\ts\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\videostab\include;D:\wangzi6147\Doc\git\OpenTLD\src\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>D:\wangzi6147\Soft\opencv2.4.9\build_CUDA_VS2013;D:\wangzi6147\Soft\opencv2.4.9\sources\include;D:\wangzi6147\Soft\opencv2.4.9\sources\include\opencv;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\core\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\flann\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\imgproc\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\highgui\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\features2d\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\calib3d\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\ml\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\video\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\legacy\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\objdetect\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\photo\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\gpu\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\ocl\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\nonfree\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\contrib\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\stitching\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\superres\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\ts\include;D:\wangzi6147\Soft\opencv2.4.9\sources\modules\videostab\include;D:\wangzi6147\Doc\git\OpenTLD\src\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="CMakeFiles\731e89b08b3ca778540c884c9bc3dc60\generate.stamp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\bin\cmake.exe -HD:/wangzi6147/Doc/git/OpenTLD/src -BD:/wangzi6147/Doc/git/OpenTLD/src --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file "$(SolutionPath)"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">D:/wangzi6147/Doc/git/OpenTLD/src/CMakeFiles/731e89b08b3ca778540c884c9bc3dc60/generate.stamp.rule;D:\wangzi6147\Doc\git\OpenTLD\src\CMakeFiles\3.0.2\CMakeCCompiler.cmake;D:\wangzi6147\Doc\git\OpenTLD\src\CMakeFiles\3.0.2\CMakeCXXCompiler.cmake;D:\wangzi6147\Doc\git\OpenTLD\src\CMakeFiles\3.0.2\CMakeRCCompiler.cmake;D:\wangzi6147\Doc\git\OpenTLD\src\CMakeFiles\3.0.2\CMakeSystem.cmake;D:\wangzi6147\Doc\git\OpenTLD\src\CMakeLists.txt;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeCCompiler.cmake.in;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeCCompilerABI.c;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeCInformation.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeCXXCompiler.cmake.in;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeCXXCompilerABI.cpp;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeCXXInformation.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeClDeps.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeCommonLanguageInclude.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeDetermineCCompiler.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeDetermineCXXCompiler.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeDetermineCompiler.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeDetermineCompilerABI.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeDetermineCompilerId.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeFindBinUtils.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeGenericSystem.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeParseArguments.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeParseImplicitLinkInfo.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeRCInformation.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeSystemSpecificInformation.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeTestCCompiler.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeTestCXXCompiler.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeTestCompilerCommon.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CompilerId\VS-10.vcxproj.in;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\FindCUDA.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\FindPackageHandleStandardArgs.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\FindPackageMessage.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\Platform\Windows-CXX.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\Platform\Windows-MSVC-C.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\Platform\Windows-MSVC-CXX.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\Platform\Windows-MSVC.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\Platform\Windows.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\Platform\WindowsPaths.cmake;D:\wangzi6147\Soft\opencv2.4.9\build_CUDA_VS2013\OpenCVConfig-version.cmake;D:\wangzi6147\Soft\opencv2.4.9\build_CUDA_VS2013\OpenCVConfig.cmake;D:\wangzi6147\Soft\opencv2.4.9\build_CUDA_VS2013\OpenCVModules.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">D:\wangzi6147\Doc\git\OpenTLD\src\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\bin\cmake.exe -HD:/wangzi6147/Doc/git/OpenTLD/src -BD:/wangzi6147/Doc/git/OpenTLD/src --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file "$(SolutionPath)"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">D:/wangzi6147/Doc/git/OpenTLD/src/CMakeFiles/731e89b08b3ca778540c884c9bc3dc60/generate.stamp.rule;D:\wangzi6147\Doc\git\OpenTLD\src\CMakeFiles\3.0.2\CMakeCCompiler.cmake;D:\wangzi6147\Doc\git\OpenTLD\src\CMakeFiles\3.0.2\CMakeCXXCompiler.cmake;D:\wangzi6147\Doc\git\OpenTLD\src\CMakeFiles\3.0.2\CMakeRCCompiler.cmake;D:\wangzi6147\Doc\git\OpenTLD\src\CMakeFiles\3.0.2\CMakeSystem.cmake;D:\wangzi6147\Doc\git\OpenTLD\src\CMakeLists.txt;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeCCompiler.cmake.in;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeCCompilerABI.c;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeCInformation.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeCXXCompiler.cmake.in;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeCXXCompilerABI.cpp;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeCXXInformation.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeClDeps.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeCommonLanguageInclude.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeDetermineCCompiler.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeDetermineCXXCompiler.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeDetermineCompiler.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeDetermineCompilerABI.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeDetermineCompilerId.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeFindBinUtils.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeGenericSystem.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeParseArguments.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeParseImplicitLinkInfo.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeRCInformation.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeSystemSpecificInformation.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeTestCCompiler.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeTestCXXCompiler.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeTestCompilerCommon.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CompilerId\VS-10.vcxproj.in;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\FindCUDA.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\FindPackageHandleStandardArgs.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\FindPackageMessage.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\Platform\Windows-CXX.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\Platform\Windows-MSVC-C.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\Platform\Windows-MSVC-CXX.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\Platform\Windows-MSVC.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\Platform\Windows.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\Platform\WindowsPaths.cmake;D:\wangzi6147\Soft\opencv2.4.9\build_CUDA_VS2013\OpenCVConfig-version.cmake;D:\wangzi6147\Soft\opencv2.4.9\build_CUDA_VS2013\OpenCVConfig.cmake;D:\wangzi6147\Soft\opencv2.4.9\build_CUDA_VS2013\OpenCVModules.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">D:\wangzi6147\Doc\git\OpenTLD\src\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\bin\cmake.exe -HD:/wangzi6147/Doc/git/OpenTLD/src -BD:/wangzi6147/Doc/git/OpenTLD/src --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file "$(SolutionPath)"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">D:/wangzi6147/Doc/git/OpenTLD/src/CMakeFiles/731e89b08b3ca778540c884c9bc3dc60/generate.stamp.rule;D:\wangzi6147\Doc\git\OpenTLD\src\CMakeFiles\3.0.2\CMakeCCompiler.cmake;D:\wangzi6147\Doc\git\OpenTLD\src\CMakeFiles\3.0.2\CMakeCXXCompiler.cmake;D:\wangzi6147\Doc\git\OpenTLD\src\CMakeFiles\3.0.2\CMakeRCCompiler.cmake;D:\wangzi6147\Doc\git\OpenTLD\src\CMakeFiles\3.0.2\CMakeSystem.cmake;D:\wangzi6147\Doc\git\OpenTLD\src\CMakeLists.txt;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeCCompiler.cmake.in;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeCCompilerABI.c;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeCInformation.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeCXXCompiler.cmake.in;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeCXXCompilerABI.cpp;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeCXXInformation.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeClDeps.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeCommonLanguageInclude.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeDetermineCCompiler.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeDetermineCXXCompiler.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeDetermineCompiler.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeDetermineCompilerABI.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeDetermineCompilerId.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeFindBinUtils.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeGenericSystem.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeParseArguments.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeParseImplicitLinkInfo.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeRCInformation.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeSystemSpecificInformation.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeTestCCompiler.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeTestCXXCompiler.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeTestCompilerCommon.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CompilerId\VS-10.vcxproj.in;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\FindCUDA.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\FindPackageHandleStandardArgs.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\FindPackageMessage.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\Platform\Windows-CXX.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\Platform\Windows-MSVC-C.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\Platform\Windows-MSVC-CXX.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\Platform\Windows-MSVC.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\Platform\Windows.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\Platform\WindowsPaths.cmake;D:\wangzi6147\Soft\opencv2.4.9\build_CUDA_VS2013\OpenCVConfig-version.cmake;D:\wangzi6147\Soft\opencv2.4.9\build_CUDA_VS2013\OpenCVConfig.cmake;D:\wangzi6147\Soft\opencv2.4.9\build_CUDA_VS2013\OpenCVModules.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">D:\wangzi6147\Doc\git\OpenTLD\src\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\bin\cmake.exe -HD:/wangzi6147/Doc/git/OpenTLD/src -BD:/wangzi6147/Doc/git/OpenTLD/src --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file "$(SolutionPath)"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">D:/wangzi6147/Doc/git/OpenTLD/src/CMakeFiles/731e89b08b3ca778540c884c9bc3dc60/generate.stamp.rule;D:\wangzi6147\Doc\git\OpenTLD\src\CMakeFiles\3.0.2\CMakeCCompiler.cmake;D:\wangzi6147\Doc\git\OpenTLD\src\CMakeFiles\3.0.2\CMakeCXXCompiler.cmake;D:\wangzi6147\Doc\git\OpenTLD\src\CMakeFiles\3.0.2\CMakeRCCompiler.cmake;D:\wangzi6147\Doc\git\OpenTLD\src\CMakeFiles\3.0.2\CMakeSystem.cmake;D:\wangzi6147\Doc\git\OpenTLD\src\CMakeLists.txt;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeCCompiler.cmake.in;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeCCompilerABI.c;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeCInformation.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeCXXCompiler.cmake.in;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeCXXCompilerABI.cpp;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeCXXInformation.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeClDeps.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeCommonLanguageInclude.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeDetermineCCompiler.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeDetermineCXXCompiler.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeDetermineCompiler.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeDetermineCompilerABI.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeDetermineCompilerId.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeFindBinUtils.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeGenericSystem.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeParseArguments.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeParseImplicitLinkInfo.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeRCInformation.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeSystemSpecificInformation.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeTestCCompiler.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeTestCXXCompiler.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CMakeTestCompilerCommon.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\CompilerId\VS-10.vcxproj.in;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\FindCUDA.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\FindPackageHandleStandardArgs.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\FindPackageMessage.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\Platform\Windows-CXX.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\Platform\Windows-MSVC-C.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\Platform\Windows-MSVC-CXX.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\Platform\Windows-MSVC.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\Platform\Windows.cmake;D:\wangzi6147\Soft\cmake-3.0.2-win32-x86\share\cmake-3.0\Modules\Platform\WindowsPaths.cmake;D:\wangzi6147\Soft\opencv2.4.9\build_CUDA_VS2013\OpenCVConfig-version.cmake;D:\wangzi6147\Soft\opencv2.4.9\build_CUDA_VS2013\OpenCVConfig.cmake;D:\wangzi6147\Soft\opencv2.4.9\build_CUDA_VS2013\OpenCVModules.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">D:\wangzi6147\Doc\git\OpenTLD\src\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="CMakeFiles\731e89b08b3ca778540c884c9bc3dc60\ZERO_CHECK.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">D:/wangzi6147/Doc/git/OpenTLD/src/CMakeFiles/731e89b08b3ca778540c884c9bc3dc60/ZERO_CHECK.rule;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">D:\wangzi6147\Doc\git\OpenTLD\src\CMakeFiles\ZERO_CHECK</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">D:/wangzi6147/Doc/git/OpenTLD/src/CMakeFiles/731e89b08b3ca778540c884c9bc3dc60/ZERO_CHECK.rule;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">D:\wangzi6147\Doc\git\OpenTLD\src\CMakeFiles\ZERO_CHECK</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">D:/wangzi6147/Doc/git/OpenTLD/src/CMakeFiles/731e89b08b3ca778540c884c9bc3dc60/ZERO_CHECK.rule;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">D:\wangzi6147\Doc\git\OpenTLD\src\CMakeFiles\ZERO_CHECK</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">D:/wangzi6147/Doc/git/OpenTLD/src/CMakeFiles/731e89b08b3ca778540c884c9bc3dc60/ZERO_CHECK.rule;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">D:\wangzi6147\Doc\git\OpenTLD\src\CMakeFiles\ZERO_CHECK</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <None Include="CMakeFiles\ZERO_CHECK" />
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>